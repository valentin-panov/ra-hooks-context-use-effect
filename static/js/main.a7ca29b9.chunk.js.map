{"version":3,"sources":["components/List/ListItem/ListItem.js","components/List/List.js","components/Details/Details.js","components/Loading/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","item","getUserIdHandler","className","active","onClick","id","name","List","list","map","Details","userInfo","avatar","details","city","company","position","src","alt","Loading","baseURL","App","useState","setList","userID","setUserID","setUserInfo","loading","setLoading","useEffect","fetch","then","response","json","data","prevState","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7ca29b9.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ListItem({ item, getUserIdHandler }) {\n  return (\n    <li\n      className={'list_item ' + (item.active ? 'active' : '')}\n      onClick={() => {\n        getUserIdHandler(item.id);\n      }}\n    >\n      {item.name}\n    </li>\n  );\n}\n","import React from 'react';\nimport ListItem from './ListItem/ListItem';\n\nexport default function List({ list, getUserIdHandler }) {\n  return (\n    <div className='list_container'>\n      <ul className='list'>\n        {list.map((item) => (\n          <ListItem\n            key={item.id}\n            item={item}\n            getUserIdHandler={getUserIdHandler}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Details({ userInfo }) {\n  if (!userInfo) return <></>;\n  const { id, name, avatar, details } = userInfo;\n  const { city, company, position } = details;\n  return (\n    <div className='container_details' data-id={id}>\n      <img src={avatar} alt='avatar' />\n      <span className='container_details-name'>{name}</span>\n      <span>City: {city}</span>\n      <span>Company: {company}</span>\n      <span>Position: {position}</span>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Loading() {\n  return <div className='Loading'>Загрузка...</div>;\n}\n","import React, { useState, useEffect } from 'react';\nimport List from './components/List/List';\nimport Details from './components/Details/Details';\nimport Loading from './components/Loading/Loading';\n\nconst baseURL =\n  'https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/';\n\nexport default function App() {\n  const [list, setList] = useState([]);\n  const [userID, setUserID] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(baseURL + 'users.json')\n      .then((response) => response.json())\n      .then((data) => setList((prevState) => [...prevState, ...data]))\n      .then(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!userID) {\n      return;\n    }\n    setLoading(true);\n    fetch(`${baseURL}${userID}.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUserInfo((prevState) => ({ ...prevState, ...data }));\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, [userID]);\n\n  const getUserIdHandler = (id) => {\n    setList((prevState) => {\n      const newState = prevState.map((item) => {\n        item.id === id ? (item.active = true) : (item.active = false);\n        return item;\n      });\n      return newState;\n    });\n    setUserID(id);\n  };\n\n  return (\n    <div className='wrapper'>\n      <div className='container'>\n        <div className='container_column'>\n          {loading && !list.length && <Loading />}\n          {list.length && (\n            <List list={list} getUserIdHandler={getUserIdHandler} />\n          )}\n        </div>\n        <div className='container_column'>\n          {userID && loading && <Loading />}\n          {!loading && userInfo && <Details userInfo={userInfo} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}